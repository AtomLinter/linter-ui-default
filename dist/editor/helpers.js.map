{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../lib/editor/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Point, TextEditor, TextEditorElement, PointLike } from 'atom'\r\nimport type TooltipElement from '../tooltip/index'\r\n\r\nconst TOOLTIP_WIDTH_HIDE_OFFSET = 30\r\n\r\nexport function getBufferPositionFromMouseEvent(\r\n  event: MouseEvent,\r\n  editor: TextEditor,\r\n  editorElement: TextEditorElement,\r\n): Point | null {\r\n  const pixelPosition = editorElement.getComponent().pixelPositionForMouseEvent(event)\r\n  const screenPosition = editorElement.getComponent().screenPositionForPixelPosition(pixelPosition)\r\n  if (Number.isNaN(screenPosition.row) || Number.isNaN(screenPosition.column)) return null\r\n  // ^ Workaround for NaN bug steelbrain/linter-ui-default#191\r\n  const expectedPixelPosition = editorElement.pixelPositionForScreenPosition(screenPosition)\r\n  const differenceTop = pixelPosition.top - expectedPixelPosition.top\r\n  const differenceLeft = pixelPosition.left - expectedPixelPosition.left\r\n  // Only allow offset of 20px - Fixes steelbrain/linter-ui-default#63\r\n  if (\r\n    (differenceTop === 0 || (differenceTop > 0 && differenceTop < 20) || (differenceTop < 0 && differenceTop > -20)) &&\r\n    (differenceLeft === 0 || (differenceLeft > 0 && differenceLeft < 20) || (differenceLeft < 0 && differenceLeft > -20))\r\n  ) {\r\n    return editor.bufferPositionForScreenPosition(screenPosition)\r\n  }\r\n  return null\r\n}\r\n\r\nexport function mouseEventNearPosition({\r\n  event,\r\n  editor,\r\n  editorElement,\r\n  tooltipElement,\r\n  screenPosition,\r\n}: {\r\n  event: { clientX: number; clientY: number }\r\n  editor: TextEditor\r\n  editorElement: TextEditorElement\r\n  tooltipElement: TooltipElement['element']\r\n  screenPosition: PointLike\r\n}): boolean {\r\n  const pixelPosition = editorElement.getComponent().pixelPositionForMouseEvent(event)\r\n  const expectedPixelPosition = editorElement.pixelPositionForScreenPosition(screenPosition)\r\n  const differenceTop = pixelPosition.top - expectedPixelPosition.top\r\n  const differenceLeft = pixelPosition.left - expectedPixelPosition.left\r\n\r\n  const editorLineHeight = editor.getLineHeightInPixels()\r\n  const elementHeight = tooltipElement.offsetHeight + editorLineHeight\r\n  const elementWidth = tooltipElement.offsetWidth\r\n\r\n  if (differenceTop > 0) {\r\n    // Cursor is below the line\r\n    if (differenceTop > elementHeight + 1.5 * editorLineHeight) {\r\n      return false\r\n    }\r\n  } else if (differenceTop < 0) {\r\n    // Cursor is above the line\r\n    if (differenceTop < -1.5 * editorLineHeight) {\r\n      return false\r\n    }\r\n  }\r\n  if (differenceLeft > 0) {\r\n    // Right of the start of highlight\r\n    if (differenceLeft > elementWidth + TOOLTIP_WIDTH_HIDE_OFFSET) {\r\n      return false\r\n    }\r\n  } else if (differenceLeft < 0) {\r\n    // Left of start of highlight\r\n    if (differenceLeft < -1 * TOOLTIP_WIDTH_HIDE_OFFSET) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function hasParent(givenElement: HTMLElement, selector: string): boolean {\r\n  let element: HTMLElement | null = givenElement\r\n  do {\r\n    if (element.matches(selector)) {\r\n      return true\r\n    }\r\n    element = element.parentElement\r\n  } while (element && element.nodeName !== 'HTML')\r\n  return false\r\n}\r\n"]}