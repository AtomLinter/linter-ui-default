{"version":3,"file":"component.js","sourceRoot":"","sources":["../../lib/panel/component.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactTable from 'sb-react-table'\r\nimport { $range, severityNames, sortMessages, visitMessage, openExternally, getPathOfMessage } from '../helpers'\r\nimport type Delegate from './delegate'\r\nimport type { LinterMessage } from '../types'\r\n\r\ntype Props = {\r\n  delegate: Delegate\r\n}\r\n\r\ntype State = {\r\n  messages: Array<LinterMessage>\r\n}\r\n\r\nexport default class PanelComponent extends React.Component<Props, State> {\r\n  static renderRowColumn(row: LinterMessage, column: string) {\r\n    const range = $range(row)\r\n\r\n    switch (column) {\r\n      case 'file':\r\n        return getPathOfMessage(row)\r\n      case 'line':\r\n        return range ? `${range.start.row + 1}:${range.start.column + 1}` : ''\r\n      case 'excerpt':\r\n        return row.excerpt\r\n      case 'severity':\r\n        return severityNames[row.severity]\r\n      default:\r\n        return row[column]\r\n    }\r\n  }\r\n\r\n  constructor(props: Props, context: Object | null | undefined) {\r\n    super(props, context)\r\n    this.state = {\r\n      messages: this.props.delegate.filteredMessages,\r\n    }\r\n  }\r\n  state: State\r\n\r\n  componentDidMount() {\r\n    this.props.delegate.onDidChangeMessages(messages => {\r\n      this.setState({ messages })\r\n    })\r\n  }\r\n\r\n  onClick = (e: React.MouseEvent, row: LinterMessage) => {\r\n    if (e.target.tagName === 'A') {\r\n      return\r\n    }\r\n    if (process.platform === 'darwin' ? e.metaKey : e.ctrlKey) {\r\n      if (e.shiftKey) {\r\n        openExternally(row)\r\n      } else {\r\n        visitMessage(row, true)\r\n      }\r\n    } else {\r\n      visitMessage(row)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { delegate } = this.props\r\n    const columns = [\r\n      { key: 'severity', label: 'Severity', sortable: true },\r\n      { key: 'linterName', label: 'Provider', sortable: true },\r\n      { key: 'excerpt', label: 'Description', onClick: this.onClick },\r\n      { key: 'line', label: 'Line', sortable: true, onClick: this.onClick },\r\n    ]\r\n    if (delegate.panelRepresents === 'Entire Project') {\r\n      columns.push({\r\n        key: 'file',\r\n        label: 'File',\r\n        sortable: true,\r\n        onClick: this.onClick,\r\n      })\r\n    }\r\n\r\n    const customStyle: React.CSSProperties = { overflowY: 'scroll', height: '100%' }\r\n\r\n    return (\r\n      <div id=\"linter-panel\" tabIndex={-1} style={customStyle}>\r\n        <ReactTable\r\n          rows={this.state.messages}\r\n          columns={columns}\r\n          initialSort={[\r\n            { column: 'severity', type: 'desc' },\r\n            { column: 'file', type: 'asc' },\r\n            { column: 'line', type: 'asc' },\r\n          ]}\r\n          sort={sortMessages}\r\n          rowKey={i => i.key}\r\n          renderHeaderColumn={i => i.label}\r\n          renderBodyColumn={PanelComponent.renderRowColumn}\r\n          style={{ width: '100%' }}\r\n          className=\"linter\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}