{"version":3,"file":"component.jsx","sourceRoot":"","sources":["../../lib/panel/component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { createSignal, onMount } from 'solid-js'\r\nimport { SimpleTable } from 'solid-simple-table'\r\nimport { $range, severityNames, sortMessages, visitMessage, openExternally, getPathOfMessage } from '../helpers'\r\nimport type Delegate from './delegate'\r\nimport type { LinterMessage } from '../types'\r\n\r\ntype Props = {\r\n  delegate: Delegate\r\n}\r\n\r\nexport function PanelComponent(props: Props) {\r\n  const [getMessages, setMessages] = createSignal(props.delegate.filteredMessages)\r\n\r\n  onMount(() => {\r\n    props.delegate.onDidChangeMessages(messages => {\r\n      setMessages(messages)\r\n    })\r\n  })\r\n\r\n  const columns = [\r\n    { id: 'severity', label: 'Severity' },\r\n    { id: 'linterName', label: 'Provider' },\r\n    { id: 'excerpt', label: 'Description', onClick: onClick, sortable: false },\r\n    { id: 'line', label: 'Line', onClick: onClick },\r\n  ]\r\n  if (props.delegate.panelRepresents === 'Entire Project') {\r\n    columns.push({\r\n      id: 'file',\r\n      label: 'File',\r\n      onClick: onClick,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"linter-panel\" tabIndex={-1} style={{ overflowY: 'scroll', height: '100%' }}>\r\n      <SimpleTable\r\n        rows={getMessages()}\r\n        columns={columns}\r\n        defaultSortDirection={['line', 'asc']}\r\n        rowSorter={sortMessages}\r\n        accessors={true}\r\n        getRowID={(i: LinterMessage) => i.key}\r\n        bodyRenderer={renderRowColumn}\r\n        style={{ width: '100%' }}\r\n        className=\"linter dark\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction renderRowColumn(row: LinterMessage, column: string): string {\r\n  const range = $range(row)\r\n\r\n  switch (column) {\r\n    case 'file':\r\n      return getPathOfMessage(row)\r\n    case 'line':\r\n      return range ? `${range.start.row + 1}:${range.start.column + 1}` : ''\r\n    case 'excerpt':\r\n      return row.excerpt\r\n    case 'severity':\r\n      return severityNames[row.severity]\r\n    default:\r\n      return row[column]\r\n  }\r\n}\r\n\r\nfunction onClick(e: MouseEvent, row: LinterMessage) {\r\n  if ((e.target as HTMLElement).tagName === 'A') {\r\n    return\r\n  }\r\n  if (process.platform === 'darwin' ? e.metaKey : e.ctrlKey) {\r\n    if (e.shiftKey) {\r\n      openExternally(row)\r\n    } else {\r\n      visitMessage(row, true)\r\n    }\r\n  } else {\r\n    visitMessage(row)\r\n  }\r\n}\r\n"]}