{"version":3,"file":"editors.js","sourceRoot":"","sources":["../lib/editors.ts"],"names":[],"mappings":";;;;;AAAA,+BAA0C;AAE1C,sDAA6B;AAC7B,uCAAgE;AAGhE,MAAqB,OAAO;IAM1B;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAA;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,0BAAmB,EAAE,CAAA;QAE9C,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAC5B,CAAC,CAAC,CACH,CAAA;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC5B,IAAI,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;oBAClC,MAAM,CAAC,aAAa,EAAE,CAAA;iBACvB;YACH,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CACH,CAAA;IACH,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,WAAW,CAAA;IACzB,CAAC;IACD,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAiB;QAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAA;QAExB,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,uBAAa,CAAC,IAAI,CAAC,CAAA;QACrD,KAAK,CAAC,OAAO,CAAC,UAAU,OAAO;YAC7B,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACjC,OAAM;aACP;YACD,MAAM,QAAQ,GAAG,eAAK,CAAC,OAAO,CAAC,CAAA;YAC/B,IAAI,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACxC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aAC7C;QACH,CAAC,CAAC,CAAA;QACF,OAAO,CAAC,OAAO,CAAC,UAAU,OAAO;YAC/B,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACjC,OAAM;aACP;YACD,MAAM,QAAQ,GAAG,eAAK,CAAC,OAAO,CAAC,CAAA;YAC/B,IAAI,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACxC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aAC/C;QACH,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,OAAO,CAAC,UAAU,QAAQ;YAClC,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YACtC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE;gBAC9C,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA;aAC1E;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IACD,SAAS,CAAC,UAAsB;QAC9B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;YAChC,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU,EAAE;gBACnC,OAAO,KAAK,CAAA;aACb;SACF;QACD,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,UAAU,CAAC,CAAA;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACxB,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;QACF,MAAM,CAAC,aAAa,CAAC,GAAG,CACtB,UAAU,CAAC,eAAe,CAAC,GAAG,EAAE;YAC9B,MAAM,CAAC,OAAO,EAAE,CAAA;YAChB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAC5B,CAAC,CAAC,CACH,CAAA;QACD,MAAM,CAAC,aAAa,CAAC,GAAG,CACtB,UAAU,CAAC,kBAAkB,CAAC,GAAG,EAAE;YACjC,MAAM,CAAC,OAAO,EAAE,CAAA;YAChB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAC5B,CAAC,CAAC,CACH,CAAA;QACD,MAAM,CAAC,KAAK,CAAC,wBAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;QACrE,OAAO,MAAM,CAAA;IACf,CAAC;IACD,OAAO;QACL,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;YAChC,KAAK,CAAC,OAAO,EAAE,CAAA;SAChB;QACD,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAA;IAC9B,CAAC;CACF;AA7FD,0BA6FC","sourcesContent":["import { CompositeDisposable } from 'atom'\r\nimport type { TextEditor } from 'atom'\r\nimport Editor from './editor'\r\nimport { $file, getEditorsMap, filterMessages } from './helpers'\r\nimport type { LinterMessage, MessagesPatch } from './types'\r\n\r\nexport default class Editors {\r\n  editors: Set<Editor>\r\n  messages: Array<LinterMessage>\r\n  firstRender: boolean\r\n  subscriptions: CompositeDisposable\r\n\r\n  constructor() {\r\n    this.editors = new Set()\r\n    this.messages = []\r\n    this.firstRender = true\r\n    this.subscriptions = new CompositeDisposable()\r\n\r\n    this.subscriptions.add(\r\n      atom.workspace.observeTextEditors(textEditor => {\r\n        this.getEditor(textEditor)\r\n      }),\r\n    )\r\n    this.subscriptions.add(\r\n      atom.workspace.getCenter().observeActivePaneItem(paneItem => {\r\n        this.editors.forEach(editor => {\r\n          if (editor.textEditor !== paneItem) {\r\n            editor.removeTooltip()\r\n          }\r\n        })\r\n      }),\r\n    )\r\n  }\r\n  isFirstRender(): boolean {\r\n    return this.firstRender\r\n  }\r\n  update({ messages, added, removed }: MessagesPatch) {\r\n    this.messages = messages\r\n    this.firstRender = false\r\n\r\n    const { editorsMap, filePaths } = getEditorsMap(this)\r\n    added.forEach(function (message) {\r\n      if (!message || !message.location) {\r\n        return\r\n      }\r\n      const filePath = $file(message)\r\n      if (filePath && editorsMap.has(filePath)) {\r\n        editorsMap.get(filePath).added.push(message)\r\n      }\r\n    })\r\n    removed.forEach(function (message) {\r\n      if (!message || !message.location) {\r\n        return\r\n      }\r\n      const filePath = $file(message)\r\n      if (filePath && editorsMap.has(filePath)) {\r\n        editorsMap.get(filePath).removed.push(message)\r\n      }\r\n    })\r\n\r\n    filePaths.forEach(function (filePath) {\r\n      const value = editorsMap.get(filePath)\r\n      if (value.added.length || value.removed.length) {\r\n        value.editors.forEach(editor => editor.apply(value.added, value.removed))\r\n      }\r\n    })\r\n  }\r\n  getEditor(textEditor: TextEditor): Editor {\r\n    for (const entry of this.editors) {\r\n      if (entry.textEditor === textEditor) {\r\n        return entry\r\n      }\r\n    }\r\n    const editor = new Editor(textEditor)\r\n    this.editors.add(editor)\r\n    editor.onDidDestroy(() => {\r\n      this.editors.delete(editor)\r\n    })\r\n    editor.subscriptions.add(\r\n      textEditor.onDidChangePath(() => {\r\n        editor.dispose()\r\n        this.getEditor(textEditor)\r\n      }),\r\n    )\r\n    editor.subscriptions.add(\r\n      textEditor.onDidChangeGrammar(() => {\r\n        editor.dispose()\r\n        this.getEditor(textEditor)\r\n      }),\r\n    )\r\n    editor.apply(filterMessages(this.messages, textEditor.getPath()), [])\r\n    return editor\r\n  }\r\n  dispose() {\r\n    for (const entry of this.editors) {\r\n      entry.dispose()\r\n    }\r\n    this.subscriptions.dispose()\r\n  }\r\n}\r\n"]}