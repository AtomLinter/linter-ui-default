{"version":3,"file":"commands.js","sourceRoot":"","sources":["../lib/commands.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'assert'\r\nimport { CompositeDisposable } from 'atom'\r\n\r\nimport {\r\n  $file,\r\n  $range,\r\n  getActiveTextEditor,\r\n  visitMessage,\r\n  sortMessages,\r\n  sortSolutions,\r\n  filterMessages,\r\n  applySolution,\r\n} from './helpers'\r\nimport type { LinterMessage, Message } from './types'\r\n\r\nexport default class Commands {\r\n  messages: Array<LinterMessage> = []\r\n  subscriptions: CompositeDisposable = new CompositeDisposable()\r\n\r\n  constructor() {\r\n    this.subscriptions.add(\r\n      atom.commands.add('atom-workspace', {\r\n        'linter-ui-default:next': () => this.move(true, true),\r\n        'linter-ui-default:previous': () => this.move(false, true),\r\n        'linter-ui-default:next-error': () => this.move(true, true, 'error'),\r\n        'linter-ui-default:previous-error': () => this.move(false, true, 'error'),\r\n        'linter-ui-default:next-warning': () => this.move(true, true, 'warning'),\r\n        'linter-ui-default:previous-warning': () => this.move(false, true, 'warning'),\r\n        'linter-ui-default:next-info': () => this.move(true, true, 'info'),\r\n        'linter-ui-default:previous-info': () => this.move(false, true, 'info'),\r\n\r\n        'linter-ui-default:next-in-current-file': () => this.move(true, false),\r\n        'linter-ui-default:previous-in-current-file': () => this.move(false, false),\r\n        'linter-ui-default:next-error-in-current-file': () => this.move(true, false, 'error'),\r\n        'linter-ui-default:previous-error-in-current-file': () => this.move(false, false, 'error'),\r\n        'linter-ui-default:next-warning-in-current-file': () => this.move(true, false, 'warning'),\r\n        'linter-ui-default:previous-warning-in-current-file': () => this.move(false, false, 'warning'),\r\n        'linter-ui-default:next-info-in-current-file': () => this.move(true, false, 'info'),\r\n        'linter-ui-default:previous-info-in-current-file': () => this.move(false, false, 'info'),\r\n\r\n        'linter-ui-default:toggle-panel': () => this.togglePanel(),\r\n\r\n        // NOTE: Add no-ops here so they are recognized by commands registry\r\n        // Real commands are registered when tooltip is shown inside tooltip's delegate\r\n        'linter-ui-default:expand-tooltip': function () {},\r\n        'linter-ui-default:collapse-tooltip': function () {},\r\n      }),\r\n      atom.commands.add('atom-text-editor:not([mini])', {\r\n        'linter-ui-default:apply-all-solutions': () => this.applyAllSolutions(),\r\n      }),\r\n      atom.commands.add('#linter-panel', {\r\n        'core:copy': () => {\r\n          const selection = document.getSelection()\r\n          if (selection) {\r\n            atom.clipboard.write(selection.toString())\r\n          }\r\n        },\r\n      }),\r\n    )\r\n  }\r\n  togglePanel(): void {\r\n    atom.config.set('linter-ui-default.showPanel', !atom.config.get('linter-ui-default.showPanel'))\r\n  }\r\n  // NOTE: Apply solutions from bottom to top, so they don't invalidate each other\r\n  applyAllSolutions(): void {\r\n    const textEditor = getActiveTextEditor()\r\n    invariant(textEditor, 'textEditor was null on a command supposed to run on text-editors only')\r\n    const messages = sortMessages(filterMessages(this.messages, textEditor.getPath()), ['line', 'desc'])\r\n    messages.forEach(function (message) {\r\n      if (message.version === 2 && message.solutions && message.solutions.length) {\r\n        applySolution(textEditor, sortSolutions(message.solutions)[0])\r\n      }\r\n    })\r\n  }\r\n  move(forward: boolean, globally: boolean, severity: string | null | undefined = null): void {\r\n    const currentEditor = getActiveTextEditor()\r\n    const currentFile: any = (currentEditor && currentEditor.getPath()) || NaN\r\n    // NOTE: ^ Setting default to NaN so it won't match empty file paths in messages\r\n    const messages = sortMessages(filterMessages(this.messages, globally ? null : currentFile, severity), ['file', 'asc'])\r\n    const expectedValue = forward ? -1 : 1\r\n\r\n    if (!currentEditor) {\r\n      const message = forward ? messages[0] : messages[messages.length - 1]\r\n      if (message) {\r\n        visitMessage(message)\r\n      }\r\n      return\r\n    }\r\n    const currentPosition = currentEditor.getCursorBufferPosition()\r\n\r\n    // NOTE: Iterate bottom to top to find the previous message\r\n    // Because if we search top to bottom when sorted, first item will always\r\n    // be the smallest\r\n    if (!forward) {\r\n      messages.reverse()\r\n    }\r\n\r\n    let found: Message | null = null\r\n    let currentFileEncountered = false\r\n    for (let i = 0, length = messages.length; i < length; i++) {\r\n      const message = messages[i]\r\n      const messageFile = $file(message)\r\n      const messageRange = $range(message)\r\n\r\n      if (!currentFileEncountered && messageFile === currentFile) {\r\n        currentFileEncountered = true\r\n      }\r\n      if (messageFile && messageRange) {\r\n        if (currentFileEncountered && messageFile !== currentFile) {\r\n          found = message\r\n          break\r\n        } else if (messageFile === currentFile && currentPosition.compare(messageRange.start) === expectedValue) {\r\n          found = message\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!found && messages.length) {\r\n      // Reset back to first or last depending on direction\r\n      found = messages[0]\r\n    }\r\n\r\n    if (found) {\r\n      visitMessage(found)\r\n    }\r\n  }\r\n  update(messages: Array<LinterMessage>) {\r\n    this.messages = messages\r\n  }\r\n  dispose(): void {\r\n    this.subscriptions.dispose()\r\n  }\r\n}\r\n"]}