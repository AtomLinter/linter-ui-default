{"version":3,"file":"index.js","sourceRoot":"","sources":["../../lib/tooltip/index.tsx"],"names":[],"mappings":";;;;;AAAA,kDAAyB;AACzB,0DAAgC;AAChC,+BAAmD;AAGnD,0DAAiC;AACjC,wDAAsC;AACtC,wCAAmC;AAGnC,MAAqB,cAAc;IAOjC,YAAY,QAA8B,EAAE,QAAe,EAAE,UAAsB;QACjF,IAAI,CAAC,OAAO,GAAG,IAAI,cAAO,EAAE,CAAA;QAC5B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC5C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,0BAAmB,EAAE,CAAA;QAE9C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QACpC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAA;QAC9D,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAA;QAEhE,MAAM,QAAQ,GAAG,IAAI,kBAAQ,EAAE,CAAA;QAC/B,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,gBAAgB,CAAA;QAClC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE;YACrC,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,IAAI,CAAC,OAAO;SACnB,CAAC,CAAA;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QAEhC,MAAM,QAAQ,GAAG,EAAE,CAAA;QACnB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACzB,IAAI,OAAO,CAAC,OAAO,KAAK,CAAC,EAAE;gBACzB,QAAQ,CAAC,IAAI,CAAC,8BAAC,iBAAc,IAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,GAAI,CAAC,CAAA;aAC1F;QACH,CAAC,CAAC,CAAA;QACF,mBAAQ,CAAC,MAAM,CAAC,uDAAkB,QAAQ,CAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;IAC9E,CAAC;IACD,OAAO,CAAC,QAAe,EAAE,QAAoC;QAC3D,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACrE,OAAO,KAAK,CAAA;SACb;QACD,MAAM,KAAK,GAAG,gBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;QACtC,OAAO,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAA;IACxD,CAAC;IACD,YAAY,CAAC,QAAmB;QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAA;IACjD,CAAC;IACD,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;QAChC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAA;IAC9B,CAAC;CACF;AA/CD,iCA+CC","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CompositeDisposable, Emitter } from 'atom'\r\nimport type { Disposable, Point, TextEditor, DisplayMarker } from 'atom'\r\n\r\nimport Delegate from './delegate'\r\nimport MessageElement from './message'\r\nimport { $range } from '../helpers'\r\nimport type { LinterMessage } from '../types'\r\n\r\nexport default class TooltipElement {\r\n  marker: DisplayMarker\r\n  element: HTMLElement\r\n  emitter: Emitter\r\n  messages: Array<LinterMessage>\r\n  subscriptions: CompositeDisposable\r\n\r\n  constructor(messages: Array<LinterMessage>, position: Point, textEditor: TextEditor) {\r\n    this.emitter = new Emitter()\r\n    this.element = document.createElement('div')\r\n    this.messages = messages\r\n    this.subscriptions = new CompositeDisposable()\r\n\r\n    this.subscriptions.add(this.emitter)\r\n    this.marker = textEditor.markBufferRange([position, position])\r\n    this.marker.onDidDestroy(() => this.emitter.emit('did-destroy'))\r\n\r\n    const delegate = new Delegate()\r\n    this.element.id = 'linter-tooltip'\r\n    textEditor.decorateMarker(this.marker, {\r\n      type: 'overlay',\r\n      item: this.element,\r\n    })\r\n    this.subscriptions.add(delegate)\r\n\r\n    const children = []\r\n    messages.forEach(message => {\r\n      if (message.version === 2) {\r\n        children.push(<MessageElement key={message.key} delegate={delegate} message={message} />)\r\n      }\r\n    })\r\n    ReactDOM.render(<linter-messages>{children}</linter-messages>, this.element)\r\n  }\r\n  isValid(position: Point, messages: Map<string, LinterMessage>): boolean {\r\n    if (this.messages.length !== 1 || !messages.has(this.messages[0].key)) {\r\n      return false\r\n    }\r\n    const range = $range(this.messages[0])\r\n    return Boolean(range && range.containsPoint(position))\r\n  }\r\n  onDidDestroy(callback: () => any): Disposable {\r\n    return this.emitter.on('did-destroy', callback)\r\n  }\r\n  dispose() {\r\n    this.emitter.emit('did-destroy')\r\n    this.subscriptions.dispose()\r\n  }\r\n}\r\n"]}