{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../lib/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Range } from 'atom'\r\nimport type { Point, PointLike, PointCompatible, RangeCompatible, TextEditor, WorkspaceOpenOptions } from 'atom'\r\nimport { shell } from 'electron'\r\nimport type Editors from './editors'\r\nimport type { LinterMessage, Message, MessageSolution, EditorsMap } from './types'\r\n\r\nlet lastPaneItem = null\r\nexport const severityScore = {\r\n  error: 3,\r\n  warning: 2,\r\n  info: 1,\r\n}\r\n\r\nexport const severityNames = {\r\n  error: 'Error',\r\n  warning: 'Warning',\r\n  info: 'Info',\r\n}\r\nexport const WORKSPACE_URI = 'atom://linter-ui-default'\r\nexport const DOCK_ALLOWED_LOCATIONS = ['center', 'bottom']\r\nexport const DOCK_DEFAULT_LOCATION = 'bottom'\r\n\r\nexport function $range(message: LinterMessage): Range | null | undefined {\r\n  return message.location.position\r\n}\r\nexport function $file(message: LinterMessage): string | null | undefined {\r\n  return message.location.file\r\n}\r\nexport function copySelection() {\r\n  const selection = getSelection()\r\n  if (selection) {\r\n    atom.clipboard.write(selection.toString())\r\n  }\r\n}\r\nexport function getPathOfMessage(message: LinterMessage): string {\r\n  return atom.project.relativizePath($file(message) || '')[1]\r\n}\r\nexport function getActiveTextEditor(): TextEditor | null | undefined {\r\n  let paneItem = atom.workspace.getCenter().getActivePaneItem()\r\n  const paneIsTextEditor = atom.workspace.isTextEditor(paneItem)\r\n  if (\r\n    !paneIsTextEditor &&\r\n    paneItem &&\r\n    lastPaneItem &&\r\n    paneItem.getURI &&\r\n    paneItem.getURI() === WORKSPACE_URI &&\r\n    (!lastPaneItem.isAlive || lastPaneItem.isAlive())\r\n  ) {\r\n    paneItem = lastPaneItem\r\n  } else {\r\n    lastPaneItem = paneItem\r\n  }\r\n  return atom.workspace.isTextEditor(paneItem) ? paneItem : null\r\n}\r\n\r\nexport function getEditorsMap(editors: Editors): { editorsMap: EditorsMap; filePaths: Array<string> } {\r\n  // TODO types\r\n  const editorsMap: EditorsMap = new Map()\r\n  const filePaths: string[] = []\r\n  for (const entry of editors.editors) {\r\n    const filePath = entry.textEditor.getPath()\r\n    if (editorsMap.has(filePath)) {\r\n      editorsMap.get(filePath).editors.push(entry)\r\n    } else {\r\n      editorsMap.set(filePath, {\r\n        added: [],\r\n        removed: [],\r\n        editors: [entry],\r\n      })\r\n      filePaths.push(filePath)\r\n    }\r\n  }\r\n  return { editorsMap, filePaths }\r\n}\r\n\r\nexport function filterMessages(\r\n  messages: Array<LinterMessage>,\r\n  filePath: string | null | undefined,\r\n  severity: string | null | undefined = null,\r\n): Array<LinterMessage> {\r\n  const filtered = []\r\n  messages.forEach(function (message) {\r\n    if (!message || !message.location) {\r\n      return\r\n    }\r\n    if ((filePath === null || $file(message) === filePath) && (!severity || message.severity === severity)) {\r\n      filtered.push(message)\r\n    }\r\n  })\r\n  return filtered\r\n}\r\n\r\nexport function filterMessagesByRangeOrPoint(\r\n  messages: Set<LinterMessage> | Array<LinterMessage> | Map<string, LinterMessage>,\r\n  filePath: string,\r\n  rangeOrPoint: Point | RangeCompatible,\r\n): Array<LinterMessage> {\r\n  const filtered = []\r\n  const expectedRange =\r\n    rangeOrPoint.constructor.name === 'Point'\r\n      ? new Range(rangeOrPoint as Point, rangeOrPoint as Point)\r\n      : Range.fromObject(rangeOrPoint as RangeCompatible)\r\n  messages.forEach(function (message: LinterMessage) {\r\n    const file = $file(message)\r\n    const range = $range(message)\r\n    if (\r\n      file &&\r\n      range &&\r\n      file === filePath &&\r\n      typeof range.intersectsWith === 'function' &&\r\n      range.intersectsWith(expectedRange)\r\n    ) {\r\n      filtered.push(message)\r\n    }\r\n  })\r\n  return filtered\r\n}\r\n\r\nexport function openFile(file: string, position: PointLike | null | undefined) {\r\n  const options: WorkspaceOpenOptions = { searchAllPanes: true }\r\n  if (position) {\r\n    options.initialLine = position.row\r\n    options.initialColumn = position.column\r\n  }\r\n  atom.workspace.open(file, options)\r\n}\r\n\r\nexport function visitMessage(message: LinterMessage, reference = false) {\r\n  let messageFile: string\r\n  let messagePosition: Point\r\n  if (reference) {\r\n    if (!message.reference || !message.reference.file) {\r\n      console.warn('[Linter-UI-Default] Message does not have a valid reference. Ignoring')\r\n      return\r\n    }\r\n    messageFile = message.reference.file\r\n    messagePosition = message.reference.position\r\n  } else {\r\n    const messageRange = $range(message)\r\n    messageFile = $file(message)\r\n    if (messageRange) {\r\n      messagePosition = messageRange.start\r\n    }\r\n  }\r\n  if (messageFile) {\r\n    openFile(messageFile, messagePosition)\r\n  }\r\n}\r\n\r\nexport function openExternally(message: LinterMessage) {\r\n  if (message.version === 2 && message.url) {\r\n    shell.openExternal(message.url)\r\n  }\r\n}\r\n\r\nexport function sortMessages(\r\n  sortInfo: Array<{ column: string; type: 'asc' | 'desc' }>,\r\n  rows: Array<LinterMessage>,\r\n): Array<LinterMessage> {\r\n  const sortColumns: {\r\n    severity?: 'asc' | 'desc'\r\n    linterName?: 'asc' | 'desc'\r\n    file?: 'asc' | 'desc'\r\n    line?: 'asc' | 'desc'\r\n  } = {}\r\n\r\n  sortInfo.forEach(function (entry) {\r\n    sortColumns[entry.column] = entry.type\r\n  })\r\n\r\n  return rows.slice().sort(function (a, b) {\r\n    if (sortColumns.severity) {\r\n      const multiplyWith = sortColumns.severity === 'asc' ? 1 : -1\r\n      const severityA = severityScore[a.severity]\r\n      const severityB = severityScore[b.severity]\r\n      if (severityA !== severityB) {\r\n        return multiplyWith * (severityA > severityB ? 1 : -1)\r\n      }\r\n    }\r\n    if (sortColumns.linterName) {\r\n      const multiplyWith = sortColumns.linterName === 'asc' ? 1 : -1\r\n      const sortValue = a.severity.localeCompare(b.severity)\r\n      if (sortValue !== 0) {\r\n        return multiplyWith * sortValue\r\n      }\r\n    }\r\n    if (sortColumns.file) {\r\n      const multiplyWith = sortColumns.file === 'asc' ? 1 : -1\r\n      const fileA = getPathOfMessage(a)\r\n      const fileALength = fileA.length\r\n      const fileB = getPathOfMessage(b)\r\n      const fileBLength = fileB.length\r\n      if (fileALength !== fileBLength) {\r\n        return multiplyWith * (fileALength > fileBLength ? 1 : -1)\r\n      } else if (fileA !== fileB) {\r\n        return multiplyWith * fileA.localeCompare(fileB)\r\n      }\r\n    }\r\n    if (sortColumns.line) {\r\n      const multiplyWith = sortColumns.line === 'asc' ? 1 : -1\r\n      const rangeA = $range(a)\r\n      const rangeB = $range(b)\r\n      if (rangeA && !rangeB) {\r\n        return 1\r\n      } else if (rangeB && !rangeA) {\r\n        return -1\r\n      } else if (rangeA && rangeB) {\r\n        if (rangeA.start.row !== rangeB.start.row) {\r\n          return multiplyWith * (rangeA.start.row > rangeB.start.row ? 1 : -1)\r\n        }\r\n        if (rangeA.start.column !== rangeB.start.column) {\r\n          return multiplyWith * (rangeA.start.column > rangeB.start.column ? 1 : -1)\r\n        }\r\n      }\r\n    }\r\n\r\n    return 0\r\n  })\r\n}\r\n\r\nexport function sortSolutions(solutions: Message['solutions']) {\r\n  return solutions.slice().sort(function (a, b) {\r\n    return b.priority - a.priority\r\n  })\r\n}\r\n\r\nexport function applySolution(textEditor: TextEditor, solution: MessageSolution): boolean {\r\n  if ('apply' in solution) {\r\n    solution.apply()\r\n    return true\r\n  }\r\n  const range = solution.position\r\n  const replaceWith = solution.replaceWith\r\n  if ('currentText' in solution) {\r\n    const currentText = solution.currentText\r\n    const textInRange = textEditor.getTextInBufferRange(range)\r\n    if (currentText !== textInRange) {\r\n      console.warn(\r\n        '[linter-ui-default] Not applying fix because text did not match the expected one',\r\n        'expected',\r\n        currentText,\r\n        'but got',\r\n        textInRange,\r\n      )\r\n      return false\r\n    }\r\n  }\r\n  textEditor.setTextInBufferRange(range, replaceWith)\r\n  return true\r\n}\r\n"]}